NOTES
have taken the space reallocation hit on the 4D vector: initializing unique empty vectors for each pointer is proving difficult
Would switch to a linked list, but to add points from the same vector in parallel requires element acces rather than just iterating
Solution could be to have a different parallel structure where cleary's rays are done in parallel, and access to the pushing vector is synched.
And then each cell has its points iterated through serially
But then checking which cells have been already added parallely is a pain...


TODO
Calculate by hand the cells adjacent to a plane
Check cells traversed:
	if cell list is the same something is going on with the addPoints
	if not the same fix it - what is causing the edge cases?
Try moving first ray point forward a little so it's not directly on the boundary (rework loop so that it does a floored number of steps?)
Test where extreme points are being hashed to


profile time taken for uniform SS
play around with cell size

simplification ideas:
send a point defining the plane to the intersector
use the coefficients to estimate which axis a plane will exit the voxel on




Parallel level 1: Planes
	Nature: planes are detected by trials until a % of the scene is explained by planes, or max number of trials is hit (determine with threads?)
	Issue: Don't know how many planes. 

Parallel level 2: Trials
	Nature: each trial finds a possible plane
	Issue: number of trials is updated in runtime by the outlier ratio
	Solution: determine a minimum plane size relative to the point cloud size (3 to start), give points a plane list property, valid planes fight for points.
	Will taking the largest planes that explain a % of the scene give the best solution? (i think so)

Parallel level 3: Distance comparisons (up to 20ms serially in cube model, 9ms in parallel)
	Nature: chunk points to calculate distance with into threads
	Issue: requires signed integer for OpenMP, so not as robust. Currently loop variable is only added to though, so no occasion for it to drop below zero.
	Limit model number of points to signed long long max?


The package tinyply:x64-windows provides CMake targets:

    find_package(tinyply CONFIG REQUIRED)
    target_link_libraries(main PRIVATE tinyply)

PROFILING
on medium studio with 100 trials, 4 threads:
parallel 32s
serial 113s

PROFILING 2 ELECTRIC BOOGALOO
88435studio,
        0.995,
        0.995,
        1000,
        0.02
1 thread: 106s, 102, 110, 113, 134 average 113
2 threads: 55 49 50 50 58 average 52.4
3 threads: 32s, 41, 34, 37, 34 average 35.6
4 threads: 39s, 26, 32, 34, 28 average 31.8




excel for graphs or online
python on laptop

consistently float images above or below paragraph
