NOTES
have taken the space reallocation hit on the 4D vector: initializing unique empty vectors for each pointer is proving difficult
Would switch to a linked list, but to add points from the same vector in parallel requires element acces rather than just iterating
Solution could be to have a different parallel structure where cleary's rays are done in parallel, and access to the pushing vector is synched.
And then each cell has its points iterated through serially
But then checking which cells have been already added parallely is a pain...


TODO
Run full model vector PC on the workstation on monday
Don't bother with points 2 voxels away - they'll be borderline within the threshold anyway
Find a way to retroactively see the last valid line point and ray point when the missing point alert is triggered (check progression)
No padding errors noted so far
Hashing errors don't seem to be occuring either
Visited and empty checking is correct


REPORT
Get uniform space subdivision to a point where at least the performance is comparable
Compare to show gains
Explain difficulties: floating-point prescision and hashing errors, padding, getting correct vectors with varying axis


PROFILING
Vector full model comparisons for one plane: 52,182,710

Uniform full model comparisons for one plane: 10,500,583


